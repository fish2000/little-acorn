CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

GET_FILENAME_COMPONENT(
    SUBPROJECT_NAME ${CMAKE_CURRENT_SOURCE_DIR} NAME)
GET_FILENAME_COMPONENT(
    PARENT_DIR ${CMAKE_CURRENT_SOURCE_DIR} DIRECTORY)

SET(SUBPROJECT_SOURCE_DIR ${CMAKE_CURRENT_SOURCE_DIR})
PROJECT(${SUBPROJECT_NAME})

SET(CMAKE_MODULE_PATH
    ${CMAKE_MODULE_PATH}
    ${CMAKE_BINARY_DIR}/generated
    ${PARENT_DIR}/CMake)

## Include set_if_undefined() macro
if(NOT COMMAND set_if_undefined)
    include(SetIfUndefined)
endif()

## Viron variables
SET(SUBPROJECT_DEPS ${VIRON_DEPS})
SET(SUBPROJECT_SRCS ${VIRON_SRCS})
SET(SUBPROJECT_HDRS ${VIRON_HDRS})
SET(ALL_SUBPROJECTS ${VIRON_SUBPROJECTS})
SET(SUBPROJECT_LIBS ${VIRON_LIBS} Boost)
SET(SUBPROJECT_FRAMEWORKS ${VIRON_FRAMEWORKS})
SET(CMAKE_FIND_FRAMEWORK "LAST")

## set include path and project sources
SET(CMAKE_FRAMEWORK_PATH
    ${CMAKE_FRAMEWORK_PATH}
    /System/Library/Frameworks
    /usr/local/Frameworks)

## set include path and project sources
SET(CMAKE_LIBRARY_PATH
    ${CMAKE_LIBRARY_PATH}
    /usr/local/bin)

# FIND_PACKAGE(Capnp REQUIRED)
# find_package(Boost REQUIRED)
find_package(PkgConfig REQUIRED)
pkg_check_modules(CAPNP capnp)

IF(DEFINED SUBPROJECT_LIBS)
    foreach(L ${SUBPROJECT_LIBS})
        find_package(${L} REQUIRED)
    endforeach()
ENDIF()

include(SubmoduleOptions)

ADD_LIBRARY(lib${SUBPROJECT_NAME} STATIC ${SUBPROJECT_SRCS} ${SUBPROJECT_HDRS})
ADD_LIBRARY(${SUBPROJECT_NAME} SHARED ${SUBPROJECT_SRCS} ${SUBPROJECT_HDRS})

INCLUDE_DIRECTORIES(
    ${CMAKE_INCLUDE_PATH}
    ${CAPNP_INCLUDE_DIR}
    ${PARENT_DIR}/Shared
    ${PARENT_DIR}/Shared/PCH
    ${PARENT_DIR}/Shared/include
    ${SUBPROJECT_SOURCE_DIR}/src
    /usr/local/include)

LINK_DIRECTORIES(
    ${CMAKE_LIBRARY_PATH}
    /usr/local/lib)

set_target_properties(lib${SUBPROJECT_NAME}
    PROPERTIES LIBRARY_OUTPUT_NAME
    "${PROJECT_NAME}.a")

set_target_properties(${SUBPROJECT_NAME}
    PROPERTIES LIBRARY_OUTPUT_NAME
    "${PROJECT_NAME}.dylib")

set_target_properties(lib${SUBPROJECT_NAME}
    PROPERTIES LIBRARY_OUTPUT_DIRECTORY
    ${CMAKE_CURRENT_SOURCE_DIR})

set_target_properties(${SUBPROJECT_NAME}
    PROPERTIES LIBRARY_OUTPUT_DIRECTORY
    ${CMAKE_CURRENT_SOURCE_DIR})

IF(DEFINED SUBPROJECT_DEPS)
    foreach(D ${SUBPROJECT_DEPS})
        add_dependencies(lib${SUBPROJECT_NAME} ${D})
        add_dependencies(${SUBPROJECT_NAME} ${D})
    endforeach()
ENDIF()

TARGET_LINK_LIBRARIES(lib${SUBPROJECT_NAME}
    ${SUBPROJECT_LIBS}
    ${SUBPROJECT_FRAMEWORKS})
TARGET_LINK_LIBRARIES(${SUBPROJECT_NAME}
    ${SUBPROJECT_LIBS}
    ${SUBPROJECT_FRAMEWORKS})
